extend type Mutation {
    createComment(input: CreateCommentInput! @spread): Comment @create

    markCommentsRead(user_id: Int!): Int
    @field(resolver: "App\\GraphQL\\Mutations\\MarkAsRead@comments")
}

extend type Query {
    comments(orderBy: _ @orderBy(columnsEnum: "CommentColumns")): [Comment!]!
        @paginate(type: PAGINATOR, defaultCount: 10)

    comment(id: ID @eq): Comment @find
}

type Comment {
    id: ID!
    body: String!
    deleted_at: DateTime
    seen_at: DateTime
    created_at: DateTime
    updated_at: DateTime
    user: User @belongsTo
    ad: Ad @belongsTo
    reports: [Report!]! @morphMany(type: PAGINATOR, defaultCount: 10)
}

input CreateCommentInput {
    body: String!
    user: CreateUserBelongsTo
    ad: CreateAdBelongsTo
}
input CreateUserBelongsTo {
    connect: ID
}
input CreateAdBelongsTo {
    connect: ID
}
